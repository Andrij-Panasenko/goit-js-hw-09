{"mappings":"AAAA,MAAMA,EAAwBC,SAASC,cAAc,SAoBrD,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAGpCJ,EAAQ,0BAAwBH,QAAiBC,QAE/CG,EAAK,yBAAuBJ,QAAeC,OAAW,GAEzDA,EAAM,G,CA5BbL,EAAsBY,iBAAiB,UAEvC,SAAsBC,GACpBA,EAAIC,iBAEJ,MAAMC,EAAaC,OAAOhB,EAAsBK,MAAMY,OAChDC,EAAYF,OAAOhB,EAAsBmB,KAAKF,OAC9CG,EAASJ,OAAOhB,EAAsBoB,OAAOH,OAEnD,IAAK,IAAII,EAAI,EAAGA,GAAKD,EAAQC,IAAK,CAGhClB,EAAckB,EAFAN,EAAaG,GAAaG,EAAI,IAGzCC,MAAKC,GAAWC,QAAQC,IAAIF,EAAS,oCACrCG,OAAMH,GAAWC,QAAQC,IAAIF,EAAS,iC","sources":["src/js/03-promises.js"],"sourcesContent":["const promisesGeneratorForm = document.querySelector('.form');\n\npromisesGeneratorForm.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const firstDelay = Number(promisesGeneratorForm.delay.value);\n  const delayStep = Number(promisesGeneratorForm.step.value);\n  const amount = Number(promisesGeneratorForm.amount.value);\n\n  for (let i = 1; i <= amount; i++) {\n    const delay = firstDelay + delayStep * (i - 1);\n\n    createPromise(i, delay)\n      .then(message => console.log(message, 'color: green; font-size: 18px;'))\n      .catch(message => console.log(message, 'color: red; font-size: 18px;'));\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve(`%c ✅ Fulfilled promise ${position} in ${delay} ms`);\n      } else {\n        reject(`%c ❌ Rejected promise ${position} in ${delay} ms`);\n      }\n    }, delay);\n  });\n};"],"names":["$47d4ff9957288465$var$promisesGeneratorForm","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","firstDelay","Number","value","delayStep","step","amount","i","then","message","console","log","catch"],"version":3,"file":"03-promises.2b950025.js.map"}